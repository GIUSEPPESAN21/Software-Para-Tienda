{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive - uniminuto.edu\\\\HI-DRIVE\\\\Softwares\\\\Software-Para-Tienda\\\\Software-Para-Tienda-1\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Box, Toolbar, Typography, Grid, Button } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\n// --- Iconos (sin cambios) ---\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport CategoryIcon from '@mui/icons-material/Category';\nimport WarningIcon from '@mui/icons-material/Warning';\n\n// --- Importación de Componentes (añadimos el nuevo formulario) ---\nimport SideMenu from './components/SideMenu';\nimport MetricCard from './components/MetricCard';\nimport InventoryTable from './components/InventoryTable';\nimport AddItemForm from './components/AddItemForm'; // <-- NUEVA IMPORTACIÓN\nimport { createInventoryItem } from './service/inventoryService'; // <-- NUEVA IMPORTACIÓN\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nexport default function App() {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  // --- NUEVO ESTADO ---\n  // Este estado 'key' es un truco para forzar a la tabla a recargarse.\n  // Cada vez que cambiemos su valor, el componente InventoryTable se volverá a renderizar.\n  const [inventoryKey, setInventoryKey] = useState(0);\n  const metrics = [{\n    title: 'Total de Productos',\n    value: '350',\n    icon: /*#__PURE__*/_jsxDEV(ShoppingCartIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 58\n    }, this),\n    color: '#3b82f6'\n  }, {\n    title: 'Ítems con Bajo Stock',\n    value: '10',\n    icon: /*#__PURE__*/_jsxDEV(WarningIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 59\n    }, this),\n    color: '#f59e0b'\n  }, {\n    title: 'Categorías',\n    value: '12',\n    icon: /*#__PURE__*/_jsxDEV(CategoryIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 49\n    }, this),\n    color: '#10b981'\n  }];\n\n  // --- NUEVA FUNCIÓN ---\n  // Esta función se la pasaremos al formulario.\n  const handleAddItem = async item => {\n    await createInventoryItem(item);\n    // Cambiamos el valor de la key para forzar la recarga de la tabla\n    setInventoryKey(prevKey => prevKey + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      backgroundColor: '#f3f4f6',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        width: {\n          sm: `calc(100% - ${drawerWidth}px)`\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            fontWeight: 'bold',\n            color: '#111827'\n          },\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 28\n          }, this),\n          onClick: () => setIsFormOpen(true),\n          sx: {\n            borderRadius: 2\n          },\n          children: \"A\\xF1adir Producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          mb: 4\n        },\n        children: metrics.map(metric => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(MetricCard, {\n            title: metric.title,\n            value: metric.value,\n            icon: metric.icon,\n            color: metric.color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, metric.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InventoryTable, {}, inventoryKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddItemForm, {\n        open: isFormOpen,\n        onClose: () => setIsFormOpen(false),\n        onAddItem: handleAddItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Tpn/qK1a1ZpRixAti/j/04ymVOU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Box","Toolbar","Typography","Grid","Button","AddIcon","ShoppingCartIcon","CategoryIcon","WarningIcon","SideMenu","MetricCard","InventoryTable","AddItemForm","createInventoryItem","jsxDEV","_jsxDEV","drawerWidth","App","_s","isFormOpen","setIsFormOpen","inventoryKey","setInventoryKey","metrics","title","value","icon","fileName","_jsxFileName","lineNumber","columnNumber","color","handleAddItem","item","prevKey","sx","display","backgroundColor","minHeight","children","component","flexGrow","p","width","sm","justifyContent","alignItems","mb","variant","fontWeight","startIcon","onClick","borderRadius","container","spacing","map","metric","xs","md","open","onClose","onAddItem","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive - uniminuto.edu/HI-DRIVE/Softwares/Software-Para-Tienda/Software-Para-Tienda-1/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Box, Toolbar, Typography, Grid, Button } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\n// --- Iconos (sin cambios) ---\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\n\r\n// --- Importación de Componentes (añadimos el nuevo formulario) ---\r\nimport SideMenu from './components/SideMenu';\r\nimport MetricCard from './components/MetricCard';\r\nimport InventoryTable from './components/InventoryTable';\r\nimport AddItemForm from './components/AddItemForm'; // <-- NUEVA IMPORTACIÓN\r\nimport { createInventoryItem } from './service/inventoryService'; // <-- NUEVA IMPORTACIÓN\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default function App() {\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  // --- NUEVO ESTADO ---\r\n  // Este estado 'key' es un truco para forzar a la tabla a recargarse.\r\n  // Cada vez que cambiemos su valor, el componente InventoryTable se volverá a renderizar.\r\n  const [inventoryKey, setInventoryKey] = useState(0);\r\n\r\n  const metrics = [\r\n      { title: 'Total de Productos', value: '350', icon: <ShoppingCartIcon />, color: '#3b82f6' },\r\n      { title: 'Ítems con Bajo Stock', value: '10', icon: <WarningIcon />, color: '#f59e0b' },\r\n      { title: 'Categorías', value: '12', icon: <CategoryIcon />, color: '#10b981' },\r\n  ];\r\n  \r\n  // --- NUEVA FUNCIÓN ---\r\n  // Esta función se la pasaremos al formulario.\r\n  const handleAddItem = async (item) => {\r\n    await createInventoryItem(item);\r\n    // Cambiamos el valor de la key para forzar la recarga de la tabla\r\n    setInventoryKey(prevKey => prevKey + 1); \r\n  };\r\n    \r\n  return (\r\n    <Box sx={{ display: 'flex', backgroundColor: '#f3f4f6', minHeight: '100vh' }}>\r\n      <SideMenu />\r\n      \r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 3, width: { sm: `calc(100% - ${drawerWidth}px)` } }}\r\n      >\r\n        <Toolbar />\r\n        \r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\r\n            <Typography variant=\"h4\" sx={{ fontWeight: 'bold', color: '#111827' }}>\r\n              Dashboard\r\n            </Typography>\r\n            {/* --- NUEVO BOTÓN --- */}\r\n            <Button \r\n                variant=\"contained\" \r\n                startIcon={<AddIcon />}\r\n                onClick={() => setIsFormOpen(true)}\r\n                sx={{ borderRadius: 2 }}\r\n            >\r\n              Añadir Producto\r\n            </Button>\r\n        </Box>\r\n\r\n        <Grid container spacing={3} sx={{ mb: 4 }}>\r\n            {metrics.map(metric => (\r\n                <Grid item xs={12} sm={6} md={4} key={metric.title}>\r\n                    <MetricCard \r\n                        title={metric.title}\r\n                        value={metric.value}\r\n                        icon={metric.icon}\r\n                        color={metric.color}\r\n                    />\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n        \r\n        {/* Pasamos la 'key' a la tabla para que se actualice */}\r\n        <InventoryTable key={inventoryKey} />\r\n        \r\n        {/* --- NUEVO FORMULARIO (inicialmente oculto) --- */}\r\n        <AddItemForm \r\n            open={isFormOpen}\r\n            onClose={() => setIsFormOpen(false)}\r\n            onAddItem={handleAddItem}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}